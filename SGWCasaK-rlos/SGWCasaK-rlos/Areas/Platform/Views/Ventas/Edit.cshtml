@model Core.DTOs.Ventas.VentasEditViewModel
<div class="m-content" style="width: 100%">
	<div class="row">
		<div class="col-md-12">
			<div class="m-portlet m-portlet--tab">
				<div class="m-portlet__head">
					<div class="row">
						<div class="col-md-6 col-sm-4">
							<div class="m-portlet__head-caption">
								<div class="m-portlet__head-title" style="margin-top: 20px;">
									<h3 class="m-portlet__head-text">
										Agregar Venta
									</h3>
								</div>
							</div>
						</div>
						<div class="col-md-6 col-sm-4" align="right">
							<div class="m-portlet__head-title" style="margin-top: 20px;">
								<button type="button" class="btn btn-success" data-bind="click: postDataToController">
									Guardar
								</button>
							</div>
						</div>
						@if (HasPermisos(Core.Constants.AccessFunctions.ConfirmarVenta))
						{
							<!-- ko if: estado() == @((int)Core.Constants.EstadoVenta.Pendiente)  -->
						<div class="col-md-6 col-sm-4" align="right">
							<div class="m-portlet__head-title" style="margin-top: 20px;">
								<button type="button" class="btn btn-success" data-bind="click: showPagoVentaModal">
									Confirmar
								</button>
							</div>
						</div>
							<!-- /ko -->
						}
						
					</div>
					@*<div >
							<div class="m-portlet__head-title">

								<h3 class="m-portlet__head-text">
									Agregar Venta
								</h3>
							</div>
						</div>*@
				</div>
				<!--begin::Form-->
				<form class="m-form m-form--fit m-form--label-align-right">
					<div class="m-portlet__body">
						<div class="row" style="margin-bottom: 20px;">
							<div class="col-md-6">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-2 col-form-label" style="text-align: left">
										Fecha
									</label>
									<div class="col-10">
										<input class="form-control m-input" type="text" id="example-text-input" readonly data-bind="value: moment(dateCreated()).format('DD/MM/YYYY')">
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-4 col-form-label" style="text-align: left">
										Condicion de Venta
									</label>
									<div class="col-8">
										<select onchange="clearOptionByCondicionVenta()" class="form-control m-input m-input--square" id="condicionVentaSelect" data-bind="options: condicionesVenta,
                                           optionsValue: 'value',
                                           optionsText: 'text',
                                           value: condicionVenta,
                                           optionsCaption: 'Seleccione una opcion'" disabled></select>
									</div>
								</div>
							</div>
						</div>
						<div class="row" style="margin-bottom: 20px;">
							<div class="col-md-6">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-2 col-form-label" style="text-align: left">
										Ruc
									</label>
									<div class="col-10">
										<input class="form-control m-input" type="text" id="example-text-input" data-bind="value: dataViewModel.cliente.ruc" readonly>
									</div>
									
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-4 col-form-label" style="text-align: left">
										Nombre o Razon Social
									</label>
									<div class="col-8">
										<input class="form-control m-input" type="text" id="example-text-input" data-bind="value: dataViewModel.cliente.displayName" readonly>
									</div>
								</div>
							</div>
						</div>

					</div>
				</form>
			</div>
			<div class="m-portlet m-portlet--tab">
				<div class="m-portlet__head">
					<div class="m-portlet__head-caption">
						<div class="m-portlet__head-title">
							<h3 class=" m-portlet__head-text">
								Productos
							</h3>
						</div>
					</div>
				</div>
				<!--begin::Form-->
				<form class="m-form m-form--fit m-form--label-align-right" id="productoAddDetalleForm">
					<div class="m-portlet__body">
						<div class="row">
							<div class="col-md-4">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-2 col-form-label">
										Nombre
									</label>
									<div class="col-10">
										<input class="form-control m-input" type="text" id="productoNombre" data-bind="value: dataViewModel.producto.nombre">
									</div>
								</div>
							</div>
							<div class="col-md-4">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-2 col-form-label">
										Precio
									</label>
									<div class="col-10">
										<input class="form-control m-input" type="text" id="productoPrecioVenta" data-bind="value: dataViewModel.producto.precioVenta">
									</div>
								</div>
							</div>
							<div class="col-md-4">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-2 col-form-label">
										Cantidad
									</label>
									<div class="col-10">
										<input class="form-control m-input" type="text" id="productoCantidad" data-bind="value: dataViewModel.producto.cantidad">
									</div>
								</div>
							</div>
						</div>

					</div>
					<div class="m-portlet__foot m-portlet__foot--fit">
						<div class="m-form__actions">
							<div class="row">
								<div class="col-12">
									<button type="button" class="btn btn-success" onclick="showListaProductosModal()">
										Buscar
									</button>
									<button type="button" class="btn btn-secondary" data-bind="click: agregarDetalle">
										Agregar
									</button>

								</div>
							</div>
						</div>
					</div>
				</form>
			</div>
			<div class="m-portlet m-portlet--tab">
				<div class="m-portlet__head">
					<div class="m-portlet__head-caption">
						<div class="m-portlet__head-title">
							<h3 class="m-portlet__head-text">
								Detalle
							</h3>
						</div>
					</div>
				</div>

				<div class="m-portlet__body">
					<!--begin: Datatable -->
					<table id="detalleAddVentaTable" class="table m-table m-table--head-bg-success">
						<thead>
							<tr>
								<th>
									Cant
								</th>
								<th>
									Descripcion
								</th>
								<th>
									Precio Venta
								</th>
								<th colspan="3" style=" text-align : center">
									Totales
								</th>
								<!-- ko if: $root.estado() == @((int)Core.Constants.EstadoVenta.Pendiente)  -->
								<th></th>
								<!-- /ko -->
							</tr>
							<tr>
								<th></th>
								<th></th>
								<th></th>
								<th>
									Excenta
								</th>
								<th>
									5%
								</th>
								<th>
									10%
								</th>
								<!-- ko if: $root.estado() == @((int)Core.Constants.EstadoVenta.Pendiente)  -->
								<th></th>
								<!-- /ko -->
							</tr>
						</thead>
						<tbody data-bind="foreach: detalleVenta">
							<tr>
								<td data-bind="text: cantidad"></td>
								<td data-bind="text: nombre"></td>
								<td data-bind="text: precioVenta"></td>
								<td><span data-bind="visible: porcentajeIva() == 1, text: montoTotal"></span></td>
								<td><span data-bind="visible: porcentajeIva() == 2, text: montoTotal"></span></td>
								<td><span data-bind="visible: porcentajeIva() == 3, text: montoTotal"></span></td>
								<!-- ko if: $root.estado() == @((int)Core.Constants.EstadoVenta.Pendiente)  -->
								<td><a href="#" data-bind="attr: { id: productoId() }, click: $parent.eliminarDetalle"><i class="fa fa-trash"></i></a></td>
								<!-- /ko -->
							</tr>
						</tbody>
						<tfoot>
							<tr>
								<td colspan="3" style="text-align : center"> Totales </td>
								<td data-bind="text: totalExcenta"></td>
								<td data-bind="text: totalCinco"></td>
								<td data-bind="text: totalDiez"></td>
							</tr>
							<tr>
								<td colspan="3" style="text-align : center">Monto Total </td>
								<td></td>
								<td></td>
								<td data-bind="text: montoTotal"></td>
							</tr>
						</tfoot>
					</table>
					<!--end: Datatable -->
				</div>
			</div>
			<div class="m-portlet m-portlet--tab">

				<!--begin::Form-->
				<form class="m-form m-form--fit m-form--label-align-right" id="productoAddDetalleForm">
					<div class="m-portlet__body">
						<div class="row">
							<div class="col-md-3">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-12 col-form-label">
										Total Iva
									</label>

								</div>
							</div>
							<div class="col-md-3">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-4 col-form-label">
										IVA Cinco
									</label>
									<div class="col-8">
										<input class="form-control m-input" type="text" id="productoPrecioVenta" data-bind="value: dataViewModel.ivaCinco" readonly>
									</div>
								</div>
							</div>
							<div class="col-md-3">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-4 col-form-label">
										IVA Diez
									</label>
									<div class="col-8">
										<input class="form-control m-input" type="text" id="productoCantidad" data-bind="value: dataViewModel.ivaDiez" readonly>
									</div>
								</div>
							</div>
							<div class="col-md-3">
								<div class="form-group m-form__group row">
									<label for="example-text-input" class="col-4 col-form-label">
										IVA Total
									</label>
									<div class="col-8">
										<input class="form-control m-input" type="text" id="productoCantidad" data-bind="value: dataViewModel.ivaTotal" readonly>
									</div>
								</div>
							</div>
						</div>

					</div>
				</form>
			</div>
		</div>
	</div>
</div>
@{
	Html.RenderPartial("~/Areas/Platform/Views/Shared/_ListaProductoModal.cshtml");
	Html.RenderPartial("~/Areas/Platform/Views/Shared/_AddProductoModal.cshtml");
	Html.RenderPartial("~/Areas/Platform/Views/Shared/_AddPagoVentaModal.cshtml");
	Html.RenderPartial("~/Areas/Platform/Views/Shared/_AddVentaCuotasModal.cshtml");
}
<!-- /content -->
@section scripts{
	<script>
        var model = @Html.Raw(Json.Serialize(Model));
        var dataViewModel = ko.mapping.fromJS(model);

        dataViewModel.agregarDetalle = function ()
        {
            if (parseInt(dataViewModel.producto.cantidad()) == 0) {
                showError("Debe introducir la cantidad para agregar a la venta");

                return;
            }
            if ($.grep(dataViewModel.detalleVenta(), function (item) { return item.productoId() === parseInt(dataViewModel.producto.productoId()); }).length > 0) {
                showError("El producto ya fue agregado al detalle de venta");
                resetProductoForm();
                return;
            }
            if (dataViewModel.producto.productoId() == 0) {
                showError("Debe ingresar un producto para agregar al detalle");
                resetProductoForm();
                return;
            }
            var cantidadSeleccionada = dataViewModel.producto.equivalencia() == 1 ? parseInt(dataViewModel.producto.cantidad()) : parseInt(dataViewModel.producto.cantidad() * dataViewModel.producto.equivalencia());
            if (cantidadSeleccionada > dataViewModel.producto.stock()) {
                showError("El producto no existe en la cantidad deseada");
                resetProductoForm();
                return;
            }
            dataViewModel.producto.montoTotal(dataViewModel.producto.precioVenta() *  dataViewModel.producto.cantidad());
            dataViewModel.detalleVenta.push(ko.mapping.fromJS(ko.mapping.toJS(dataViewModel.producto)))
            resetProductoForm();

        }

        dataViewModel.eliminarDetalle = function ()
        {
            var item = this;
            dataViewModel.detalleVenta.remove(item);
        }

        dataViewModel.totalExcenta = ko.pureComputed(function () {
            var total = $.grep(dataViewModel.detalleVenta(), function (item) { return item.porcentajeIva() === 1; }).reduce(function (a, b) {

                    return a + b.montoTotal();

            }, 0)
            return total;
        })

        dataViewModel.totalCinco = ko.pureComputed(function ()
        {
            var total = $.grep(dataViewModel.detalleVenta(), function (item) { return item.porcentajeIva() === 2; }).reduce(function (a, b) {

                    return a + b.montoTotal();

            }, 0)
            return total;
        })

        dataViewModel.totalDiez = ko.pureComputed(function () {
            var total = $.grep(dataViewModel.detalleVenta(), function (item) { return item.porcentajeIva() === 3; }).reduce(function (a, b)
            {
                ////if (a == 0) {
                ////    return b.montoTotal();
                ////} else {
                    return a + b.montoTotal();
                //}
            }, 0)
            return total;
        })

        dataViewModel.ivaCinco = ko.pureComputed(function () {
            return Math.round (dataViewModel.totalCinco() / 21)
        })

        dataViewModel.ivaDiez = ko.pureComputed(function () {
            return Math.round(dataViewModel.totalDiez() / 11)
        })

        dataViewModel.ivaTotal = ko.pureComputed(function () {
            return dataViewModel.ivaCinco() + dataViewModel.ivaDiez();
        })

        dataViewModel.montoTotal = ko.pureComputed(function () {
            return dataViewModel.totalExcenta() + dataViewModel.totalCinco() + dataViewModel.totalDiez();
        })

        dataViewModel.pagoVenta.cambio = ko.pureComputed(function () {
            if (dataViewModel.pagoVenta.monto() > dataViewModel.montoTotal()) {
                return dataViewModel.pagoVenta.monto() - dataViewModel.montoTotal();
            } else {
                return 0;
            }

        });

        dataViewModel.showPagoVentaModal = function ()
		{
			if (dataViewModel.detalleVenta().length == 0) {
				showError("Debe ingresar al menos un producto para la venta");
				return;
			}
			if (dataViewModel.condicionVenta() == 0) {
				$("#addPagoVentaModal").modal("show");
			}
			else
			{
				openCuotasModal();
			}

		}

        dataViewModel.postDataToController = function () {
            if (dataViewModel.cliente.clienteId() == 0)
            {
                showError("Debe seleccionar un cliente para la venta");
                return;
            }
            if (dataViewModel.detalleVenta().length == 0) {
                showError("Debe ingresar al menos un producto para la venta");
                return;
            }
            dataViewModel.producto.cantidad(0);
            $.ajax({
                url: "@Url.Action("Edit", "Ventas")",
                type: "POST",
                data: { model: ko.toJSON(dataViewModel) },
                success: function (response) {
                    if (response.success) {
                        showSuccessAndGoToUrl(response.message, '@Url.Action("Index", "Ventas", new { area = "Platform"})');
                    } else {
                        showError(response.message);
                    }
                },
                error: function () {
                    showError();
                }
            });


            return false;
		}

		 dataViewModel.confirmarVenta = function () {
            if (dataViewModel.cliente.clienteId() == 0)
            {
                showError("Debe seleccionar un cliente para la venta");
                return;
            }
            if (dataViewModel.detalleVenta().length == 0) {
                showError("Debe ingresar al menos un producto para la venta");
                return;
            }
            dataViewModel.producto.cantidad(0);
            $.ajax({
                url: "@Url.Action("Confirmar", "Ventas")",
                type: "POST",
                data: { model: ko.toJSON(dataViewModel) },
                success: function (response) {
                    if (response.success) {
                        showSuccessAndGoToUrl(response.message, '@Url.Action("Index", "Ventas", new { area = "Platform"})');
                    } else {
                        showError(response.message);
                    }
                },
                error: function () {
                    showError();
                }
            });


            return false;
        }

        $(document).ready(function () {
            dataViewModel.producto.cantidad("");
        })

		function openCuotasModal()
		{
			$("#addVentaCuotasIframe").attr('src', '@Url.Action("VentaAddCuota", "Cuotas", new { area = "Platform"})?montoTotal='+dataViewModel.montoTotal());
			$("#addVentaCuotasModal").modal("show");
		}

        function showListaProductosModal() {
            $("#listaProductosModalIframe").attr('src', '@Url.Action("ListaProductos", "Productos", new { area = "Platform"})');
            $("#listaProductosModal").modal("show");
        }

        function seleccionarProducto(producto) {
            ko.mapping.fromJS(producto, {}, dataViewModel.producto);
            $("#listaProductosModal").modal("hide");
        }

       function showListaClientesModal() {
           $("#listaClientesModalIframe").attr('src', '@Url.Action("ListaClientes", "Clientes", new { area = "Platform"})');
           $("#listaClientesModal").modal("show");
        }

        function seleccionarCliente(cliente) {
            ko.mapping.fromJS(cliente, {}, dataViewModel.cliente);
            $("#listaClientesModal").modal("hide");
        }

        function resetProductoForm() {
            dataViewModel.producto.nombre("");
            dataViewModel.producto.precioVenta(0);
            dataViewModel.producto.cantidad(0);
            dataViewModel.producto.productoId(0);
		}

		function saveCuotas(data)
		{
			$("#addVentaCuotasModal").modal("hide");
			ko.mapping.fromJS(data, {}, dataViewModel.cuotas);
			for (var i = 0; i < data.length; i++)
			{
				var itemObject = $.grep(dataViewModel.cuotas(), function (item) { return item.numeroCuota() == data[i].numeroCuota; })[0];
				itemObject.fechaVencimiento = ko.observable(now(data[i].fechaVencimiento))
			}
			dataViewModel.confirmarVenta();
		}

		function clearOptionByCondicionVenta () {
			if (dataViewModel.condicionVenta() == 1)
			{
				dataViewModel.cuotas([]);
			}

		}

		function now(date) {

			var date = new Date();
			var aaaa = date.getFullYear();
			var gg = date.getDate();
			var mm = (date.getMonth() + 1);

			if (gg < 10)
				gg = "0" + gg;

			if (mm < 10)
				mm = "0" + mm;

			var cur_day = aaaa + "-" + mm + "-" + gg;

			var hours = date.getHours()
			var minutes = date.getMinutes()
			var seconds = date.getSeconds();

			if (hours < 10)
				hours = "0" + hours;

			if (minutes < 10)
				minutes = "0" + minutes;

			if (seconds < 10)
				seconds = "0" + seconds;

			return cur_day + " " + hours + ":" + minutes + ":" + seconds;

		}
        ko.applyBindings(dataViewModel);
	</script>
}