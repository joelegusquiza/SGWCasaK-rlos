@model Core.DTOs.Pedidos.PedidosIndexViewModel

<div class="m-content" style="width: 100%">
    <div class="m-portlet m-portlet--mobile">
        <div class="m-portlet__head">
            <div class="m-portlet__head-caption">
                <div class="m-portlet__head-title">
                    <h3 class="m-portlet__head-text">
                        Pedidos
                    </h3>
                </div>
            </div>
        </div>

        <div class="m-portlet__body">
            <!--begin: Search Form -->
            <div class="m-form m-form--label-align-right m--margin-top-20 m--margin-bottom-30">
                <div class="row align-items-center">
                    <div class="col-xl-8 order-2 order-xl-1">
                        <div class="form-group m-form__group row align-items-center">
                            <div class="col-md-4">
                                <div class="m-input-icon m-input-icon--left">
                                    <input type="text" class="form-control m-input" placeholder="Search..." id="generalSearch">
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-search"></i>
                                        </span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (HasPermisos(Core.Constants.AccessFunctions.AddPedido)) 
                    { 
                        <div class="col-xl-4 order-1 order-xl-2 m--align-right">
                            <a href="@Url.Action("Add", "Pedidos", new { area = "Platform"})" class="btn btn-primary m-btn m-btn--custom m-btn--icon m-btn--air m-btn--pill">
                                <span>
                                    <i class="la la-plus"></i>
                                    <span>
                                        Agregar
                                    </span>
                                </span>
                            </a>
                            <div class="m-separator m-separator--dashed d-xl-none"></div>
                        </div>
                    }
                    
                </div>
            </div>
            <!--end: Search Form -->
            <!--begin: Datatable -->
            <table class="m-datatable" id="pedidosIndexTable" width="100%">
                <thead>
                    <tr>
						<th>#</th>
                        <th title="Field #1">
                            Cliente
                        </th>
                        <th title="Field #2">
                            Monto Total
                        </th>
                        <th title="Field #5">
                            Estado
                        </th>
                        <th title="Field #2">
                            Con Delivery
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: pedidos">
                    <tr>
						<td data-bind="text: id"></td>
                        <td data-bind="text: displayName"></td>
                        <td data-bind="text: montoTotal"></td>
                        <td data-bind="text: estadoDescripcion"></td>
                        <!-- ko if: delivery() == true -->
                        <td data-bind="text:'Si'"></td>
                        <!-- /ko -->
                        <!-- ko if: delivery() != true -->
                        <td data-bind="text:'No'"></td>
                        <!-- /ko -->
						<td>
							<a data-bind="attr: { href: '@Url.Action("View", "Pedidos", new  { area = "Platform" })?id=' + id() }"><i class="fa fa-eye"></i> View</a>
							<!-- ko if: estado() == @((int)Core.Constants.EstadoPedido.Pendiente)  -->
							@if (HasPermisos(Core.Constants.AccessFunctions.EditPedido))
							{
								<a data-bind="attr: { href: '@Url.Action("Edit", "Pedidos", new  { area = "Platform" })?id=' + id() }"><i class="fa fa-edit"></i> Editar</a>
							}
							<!-- /ko -->
							<!-- ko if: estado() ==  @((int)Core.Constants.EstadoPedido.Preparado)-->
							@if (HasPermisos(Core.Constants.AccessFunctions.GenerateVentaPedido))
							{
								<a href="#" data-bind="attr: { id: 'ventabtn-'+id() }" onClick="javacript: validarCajaAbierta(this)"><i class="fa fa-edit"></i>Generar Venta</a>
							}
							<!-- /ko -->

							<a href="#" data-bind="attr: { href: '@Url.Action("GetPedidoPdf", "Pedidos", new  { area = "Platform" })?id=' + id() }"><i class="fa fa-edit"></i>Imprimir</a>

							<!-- ko if: estado() !=@((int)Core.Constants.EstadoPedido.EntregadoPorDelivery) || estado() !=@((int)Core.Constants.EstadoPedido.Finalizado) -->
							@if (HasPermisos(Core.Constants.AccessFunctions.ChangeEstadoPedido))
							{
								<a href="#" data-bind="attr: { id: id() }" onClick="javacript: openCambiarEstadoModal(this)"><i class="fa fa-edit"></i> Cambiar Estado</a>
							}
						<!-- /ko -->
						</td>
                    </tr>
                </tbody>
            </table>
            <!--end: Datatable -->
        </div>
    </div>
</div>

@{
    Html.RenderPartial("~/Areas/Platform/Views/Shared/_ChangeEstadoModal.cshtml");
}
@section scripts{
    <script>

        var model = @Html.Raw(Json.Serialize(Model));
        var dataViewModel = ko.mapping.fromJS(model);
        dataViewModel.pedidoId = ko.observable();
        dataViewModel.estado = ko.observable();

		function validarCajaAbierta(element) {
				$.ajax({
                    url: "@Url.Action("IsAnyCajaOpen", "CajaAperturaCierre")",
                    type: "POST",

                    success: function (response) {
						if (response.success) {
							generarVenta(element);
                        } else {
                            showError(response.message);
                        }
                    },
                    error: function () {
                        showError("Error!");
                    }
                });
		}

        function generarVenta (element)
        {
			var idElement = $(element).attr('id');
			var id = idElement.split("-")[1];
                $.ajax({
                    url: "@Url.Action("ValidarPedido")",
                    type: "POST",
                    data: { pedidoId: id},
                    success: function (response) {
                        if (response.success) {
                            window.location.replace(response.message)
                        } else {
                            showError(response.message);
                        }
                    },
                    error: function () {
                        showError("Error!");
                    }
                });
        }
		function openCambiarEstadoModal(element) {
			var id = $(element).attr('id');
			$("#cambiarEstadoIFrame").attr('src', '@Url.Action("ChangeEstadoPedidoIFrame", "Pedidos", new { area = "Platform"})?id=' + id);
			$("#cambiarEstadoModal").modal("show");
        }


		function changeEstadoPedido(result) {
			$("#cambiarEstadoModal").modal("hide");
			if (result.success)
				window.location.reload()
			else
				showError(result.message);
        }
          

        function anular(element){
            var id = $(element).attr('id');
            //bootbox.confirm("Estas seguro?", function (result) {
                //if (result) {
                    $.ajax({
                        url: "@Url.Action("Desactivate")",
                        type: "POST",
                        data: { id: id},
                        success: function (response) {
                            if (response.success) {
                                localStorage.setItem('message', "Se ha anulado correctamente el pedido");
                                localStorage.setItem('show', 'true');
                                window.location.reload();
                            } else {
                                showError(response.message);
                            }
                        },
                        error: function () {
                            showError("Error!");
                        }
                    });
                //}
            //});
            return false;
        }
        ko.applyBindings(dataViewModel);
        $(document).ready(function () {
            var show = localStorage.getItem('show');
            if (show === 'true') {
                showSuccess(localStorage.getItem('message'));
                localStorage.setItem('show', 'false');
            }
        });
    </script>
}
